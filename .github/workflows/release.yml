name: 'Релиз'

on:
  push:
    tags:
      - rc-0.0.*

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 'Установка Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: '16.16.0'

      - name: 'Установка зависимостей'
        run: npm i

      - name: 'Прогон линтера и тестов'
        run: |
          npm run lint
          npm run test
  dockerize:

    name: 'Загрузка Докер-образа на Dockerhub'
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - uses: actions/checkout@v3
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: 'Загрузка на Dockerhub'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/infra:${{ github.ref_name }}
      - name: 'POST запрос на трекер в комментарий'
        run: |
          curl --location --request POST 'https://api.tracker.yandex.net/v2/issues/HOMEWORKSHRI-157/comments' \
          --header 'X-Org-ID: ${{ secrets.ORG_ID }}' \
          --header 'Authorization: OAuth ${{ secrets.TOKEN }}' \
          --header 'Content-Type: application/json' \
          --data-raw '{"text": "Собрали образ c тегом ${{ github.ref_name }}"}'
        
  report_to_tracker:
    name: 'Отправить отчёт на трекер'
    runs-on: ubuntu-latest
    needs: dockerize

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Получить текущую дату'
        id: date
        run: echo "::set-output name=date::$(date +'%d/%m/%Y')"
      - name: 'Получить описание'
        id: description
        run: echo "::set-output name=log::$(git log --pretty=format:"%h %cn %s" ${{ github.ref_name }})"
      - name: 'Обновить тикет'
        run: |
          curl --location --request PATCH 'https://api.tracker.yandex.net/v2/issues/HOMEWORKSHRI-157' \
          --header 'X-Org-ID: ${{ secrets.ORG_ID }}' \
          --header 'Authorization: OAuth ${{ secrets.TOKEN }}' \
          --header 'Content-Type: application/json' \
          --data-raw '{"summary": "Релиз ${{ github.ref_name }} - ${{ steps.date.outputs.date }}", "description": "Ответственный за релиз: ${{ github.event.pusher.name }} \n коммиты, попавшие в релиз: \n ${{ steps.description.outputs.log }}"}'
